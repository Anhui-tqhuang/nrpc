// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/rapidloop/nrpc/examples/helloworld/helloworld";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";

import "github.com/rapidloop/nrpc/nrpc.proto";

package helloworld;

option (nrpc.packageSubject) = "custom";
option (nrpc.packageSubjectParams) = "language";

// The greeting service definition.
service Greeter {
  option (nrpc.serviceSubject) = "greeter";

  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayHello2 (HelloRequest) returns (HelloFullReply1) {}
  rpc SayHello3 (HelloRequest) returns (HelloFullReply2) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

// The 'full' version of HelloReply
message HelloFullReply1 {
  oneof reply {
    HelloReply result = 1;
    nrpc.Error error = 2;
  }
}

// The 'full' version of HelloReply
message HelloFullReply2 {
  oneof reply {
    string result = 1;
    nrpc.Error error = 2;
  }
}
