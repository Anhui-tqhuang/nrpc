// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alloptions.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	alloptions.proto

It has these top-level messages:
	NoArgs
	StringArg
	SimpleStringReply
	FullReplyString
	FullReplyMessage
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import nrpc "github.com/rapidloop/nrpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NoArgs struct {
}

func (m *NoArgs) Reset()                    { *m = NoArgs{} }
func (m *NoArgs) String() string            { return proto.CompactTextString(m) }
func (*NoArgs) ProtoMessage()               {}
func (*NoArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StringArg struct {
	Arg1 string `protobuf:"bytes,1,opt,name=arg1" json:"arg1,omitempty"`
}

func (m *StringArg) Reset()                    { *m = StringArg{} }
func (m *StringArg) String() string            { return proto.CompactTextString(m) }
func (*StringArg) ProtoMessage()               {}
func (*StringArg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StringArg) GetArg1() string {
	if m != nil {
		return m.Arg1
	}
	return ""
}

type SimpleStringReply struct {
	Reply string `protobuf:"bytes,1,opt,name=reply" json:"reply,omitempty"`
}

func (m *SimpleStringReply) Reset()                    { *m = SimpleStringReply{} }
func (m *SimpleStringReply) String() string            { return proto.CompactTextString(m) }
func (*SimpleStringReply) ProtoMessage()               {}
func (*SimpleStringReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SimpleStringReply) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

type FullReplyString struct {
	// Types that are valid to be assigned to Reply:
	//	*FullReplyString_Result
	//	*FullReplyString_Error
	Reply isFullReplyString_Reply `protobuf_oneof:"reply"`
}

func (m *FullReplyString) Reset()                    { *m = FullReplyString{} }
func (m *FullReplyString) String() string            { return proto.CompactTextString(m) }
func (*FullReplyString) ProtoMessage()               {}
func (*FullReplyString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isFullReplyString_Reply interface {
	isFullReplyString_Reply()
}

type FullReplyString_Result struct {
	Result string `protobuf:"bytes,1,opt,name=result,oneof"`
}
type FullReplyString_Error struct {
	Error *nrpc.Error `protobuf:"bytes,2,opt,name=error,oneof"`
}

func (*FullReplyString_Result) isFullReplyString_Reply() {}
func (*FullReplyString_Error) isFullReplyString_Reply()  {}

func (m *FullReplyString) GetReply() isFullReplyString_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *FullReplyString) GetResult() string {
	if x, ok := m.GetReply().(*FullReplyString_Result); ok {
		return x.Result
	}
	return ""
}

func (m *FullReplyString) GetError() *nrpc.Error {
	if x, ok := m.GetReply().(*FullReplyString_Error); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FullReplyString) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FullReplyString_OneofMarshaler, _FullReplyString_OneofUnmarshaler, _FullReplyString_OneofSizer, []interface{}{
		(*FullReplyString_Result)(nil),
		(*FullReplyString_Error)(nil),
	}
}

func _FullReplyString_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FullReplyString)
	// reply
	switch x := m.Reply.(type) {
	case *FullReplyString_Result:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Result)
	case *FullReplyString_Error:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FullReplyString.Reply has unexpected type %T", x)
	}
	return nil
}

func _FullReplyString_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FullReplyString)
	switch tag {
	case 1: // reply.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Reply = &FullReplyString_Result{x}
		return true, err
	case 2: // reply.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrpc.Error)
		err := b.DecodeMessage(msg)
		m.Reply = &FullReplyString_Error{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FullReplyString_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FullReplyString)
	// reply
	switch x := m.Reply.(type) {
	case *FullReplyString_Result:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Result)))
		n += len(x.Result)
	case *FullReplyString_Error:
		s := proto.Size(x.Error)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type FullReplyMessage struct {
	// Types that are valid to be assigned to Reply:
	//	*FullReplyMessage_Result
	//	*FullReplyMessage_Error
	Reply isFullReplyMessage_Reply `protobuf_oneof:"reply"`
}

func (m *FullReplyMessage) Reset()                    { *m = FullReplyMessage{} }
func (m *FullReplyMessage) String() string            { return proto.CompactTextString(m) }
func (*FullReplyMessage) ProtoMessage()               {}
func (*FullReplyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isFullReplyMessage_Reply interface {
	isFullReplyMessage_Reply()
}

type FullReplyMessage_Result struct {
	Result *SimpleStringReply `protobuf:"bytes,1,opt,name=result,oneof"`
}
type FullReplyMessage_Error struct {
	Error *nrpc.Error `protobuf:"bytes,2,opt,name=error,oneof"`
}

func (*FullReplyMessage_Result) isFullReplyMessage_Reply() {}
func (*FullReplyMessage_Error) isFullReplyMessage_Reply()  {}

func (m *FullReplyMessage) GetReply() isFullReplyMessage_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *FullReplyMessage) GetResult() *SimpleStringReply {
	if x, ok := m.GetReply().(*FullReplyMessage_Result); ok {
		return x.Result
	}
	return nil
}

func (m *FullReplyMessage) GetError() *nrpc.Error {
	if x, ok := m.GetReply().(*FullReplyMessage_Error); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FullReplyMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FullReplyMessage_OneofMarshaler, _FullReplyMessage_OneofUnmarshaler, _FullReplyMessage_OneofSizer, []interface{}{
		(*FullReplyMessage_Result)(nil),
		(*FullReplyMessage_Error)(nil),
	}
}

func _FullReplyMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FullReplyMessage)
	// reply
	switch x := m.Reply.(type) {
	case *FullReplyMessage_Result:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Result); err != nil {
			return err
		}
	case *FullReplyMessage_Error:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FullReplyMessage.Reply has unexpected type %T", x)
	}
	return nil
}

func _FullReplyMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FullReplyMessage)
	switch tag {
	case 1: // reply.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SimpleStringReply)
		err := b.DecodeMessage(msg)
		m.Reply = &FullReplyMessage_Result{msg}
		return true, err
	case 2: // reply.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(nrpc.Error)
		err := b.DecodeMessage(msg)
		m.Reply = &FullReplyMessage_Error{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FullReplyMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FullReplyMessage)
	// reply
	switch x := m.Reply.(type) {
	case *FullReplyMessage_Result:
		s := proto.Size(x.Result)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FullReplyMessage_Error:
		s := proto.Size(x.Error)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*NoArgs)(nil), "main.NoArgs")
	proto.RegisterType((*StringArg)(nil), "main.StringArg")
	proto.RegisterType((*SimpleStringReply)(nil), "main.SimpleStringReply")
	proto.RegisterType((*FullReplyString)(nil), "main.FullReplyString")
	proto.RegisterType((*FullReplyMessage)(nil), "main.FullReplyMessage")
}

func init() { proto.RegisterFile("alloptions.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x92, 0xbd, 0x4e, 0xeb, 0x30,
	0x18, 0x86, 0x93, 0xa3, 0xb6, 0xa7, 0x75, 0xcf, 0xa1, 0xad, 0xc5, 0x8f, 0x95, 0x85, 0xca, 0x30,
	0x94, 0x25, 0x55, 0xc3, 0x88, 0x10, 0x6a, 0x11, 0xa8, 0x4b, 0x11, 0x4a, 0x26, 0x26, 0xe4, 0xa6,
	0x56, 0x30, 0x72, 0xe2, 0xc8, 0x76, 0x90, 0x58, 0x19, 0x99, 0xb8, 0x06, 0xee, 0xa1, 0x37, 0xc0,
	0xc8, 0xed, 0xf4, 0x06, 0x50, 0xed, 0x14, 0x41, 0x2b, 0x16, 0x96, 0xc8, 0xfe, 0xf2, 0xe8, 0x7b,
	0x1f, 0xbd, 0x32, 0x68, 0x13, 0xce, 0x45, 0xae, 0x99, 0xc8, 0x94, 0x9f, 0x4b, 0xa1, 0x05, 0xac,
	0xa4, 0x84, 0x65, 0xde, 0x61, 0xc2, 0xf4, 0x5d, 0x31, 0xf5, 0x63, 0x91, 0xf6, 0x25, 0xc9, 0xd9,
	0x8c, 0x0b, 0x91, 0xf7, 0x33, 0x99, 0xc7, 0xe6, 0x63, 0x59, 0x5c, 0x07, 0xb5, 0x2b, 0x31, 0x94,
	0x89, 0xc2, 0xfb, 0xa0, 0x11, 0x69, 0xc9, 0xb2, 0x64, 0x28, 0x13, 0x08, 0x41, 0x85, 0xc8, 0x64,
	0x80, 0xdc, 0xae, 0xdb, 0x6b, 0x84, 0xe6, 0x8c, 0x8f, 0x40, 0x27, 0x62, 0x69, 0xce, 0xa9, 0xc5,
	0x42, 0x9a, 0xf3, 0x47, 0xb8, 0x0d, 0xaa, 0x72, 0x79, 0x28, 0x49, 0x7b, 0xc1, 0x37, 0xa0, 0x75,
	0x59, 0x70, 0x6e, 0x10, 0x4b, 0x43, 0x04, 0x6a, 0x92, 0xaa, 0x82, 0x6b, 0x4b, 0x8e, 0x9d, 0xb0,
	0xbc, 0xc3, 0x03, 0x50, 0xa5, 0x52, 0x0a, 0x89, 0xfe, 0x74, 0xdd, 0x5e, 0x33, 0x68, 0xfa, 0x46,
	0xef, 0x62, 0x39, 0x1a, 0x3b, 0xa1, 0xfd, 0x37, 0xfa, 0x5b, 0xe6, 0x60, 0x05, 0xda, 0x9f, 0xab,
	0x27, 0x54, 0x29, 0x92, 0x50, 0x38, 0xf8, 0xb6, 0xbb, 0x19, 0xec, 0xf9, 0xcb, 0x06, 0xfc, 0x0d,
	0xdb, 0xdf, 0x86, 0x06, 0xaf, 0x2e, 0x68, 0x47, 0x0f, 0xf1, 0x79, 0xa1, 0xb4, 0x48, 0xa3, 0x62,
	0x7a, 0x4f, 0x63, 0x0d, 0x4f, 0xc0, 0xff, 0x89, 0xb6, 0x19, 0xb6, 0x8b, 0x56, 0x19, 0xbb, 0x6a,
	0xd1, 0xfb, 0xc9, 0x03, 0x3b, 0xf0, 0x14, 0x74, 0x26, 0x7a, 0xbd, 0xa3, 0x8d, 0x05, 0x3b, 0x76,
	0xb0, 0xc6, 0x61, 0xc7, 0x83, 0x6f, 0x0b, 0xb4, 0x15, 0x1b, 0x9d, 0x5b, 0x65, 0x7d, 0x02, 0x62,
	0x1c, 0x4b, 0xbb, 0x6b, 0x22, 0x49, 0xaa, 0xe0, 0x19, 0x80, 0x5f, 0x62, 0x56, 0x7d, 0x6d, 0xe4,
	0xec, 0xae, 0xe5, 0x94, 0x20, 0x76, 0xbc, 0x7f, 0xef, 0x0b, 0x54, 0x8f, 0x39, 0xa3, 0x99, 0x66,
	0xb3, 0x11, 0x7a, 0x9a, 0xa3, 0x8a, 0x14, 0x42, 0x3f, 0xcf, 0x51, 0x9d, 0x65, 0x4a, 0x93, 0x2c,
	0xa6, 0x2f, 0x73, 0xe4, 0x4e, 0x6b, 0xe6, 0x39, 0x1d, 0x7f, 0x04, 0x00, 0x00, 0xff, 0xff, 0x11,
	0xb9, 0xfb, 0x76, 0x8e, 0x02, 0x00, 0x00,
}
